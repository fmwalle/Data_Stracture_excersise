Let's define a tree's diameter as the number of nodes on the longest path between any two nodes in the tree. The longest path may or may not include the tree's root. Given a binary tree, find its diameter.

In the diagrams in the examples below, the longest path is indicated by blue nodes.

Example

For
t = {
    "value": 0,
    "left": {
        "value": 1,
        "left": null,
        "right": {
            "value": 2,
            "left": {
                "value": 3,
                "left": null,
                "right": null
            },
            "right": {
                "value": 4,
                "left": null,
                "right": null
            }
        }
    },
    "right": {
        "value": 5,
        "left": {
            "value": 6,
            "left": null,
            "right": null
        },
        "right": null
    }
}
the output should be
solution(t) = 6.
1st example
Question 2 of 2
0:22:20

Q. Given a binary tree, update each node's value with its sum of child nodes. You must update the nodes by one level at a time starting from the top (root).

Example:
Given

          1
         / \
        2   3
       /
      4
returns

          5                    // 2+3
         / \
        4   3                  // 4
       /
      4.