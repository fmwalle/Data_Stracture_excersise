Given a binary tree, return the the maximum sum of nodes from the root to any leaf.

For example, in this tree:
1
2 3
4 5 6 7

There are 4 leaves, and thus 4 paths from root to leaf:
1 -> 2 -> 4, 1 -> 2 -> 5, 1 -> 3 -> 6, 1 -> 3 -> 7

The one with the maximum sum is 1 -> 3 -> 7, so return 11.



 Given a binary search tree, return the value of the violating node. When there is a violation, return the lowest node. If there is no violating node, return -1.

The properties of a binary search tree are that:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.
A violating node occurs when one of these properties is not met.

For example, in this tree:

      5
    /  \
  2    10
   \
    8